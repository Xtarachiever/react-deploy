{"version":3,"sources":["components/LoadingComponent.js","redux/baseUrl.js","components/HomeComponent.js","components/MenuComponents.js","components/AboutComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/form.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErr","leader","leadLoading","leadFail","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","key","Id","active","RenderLeaders","tag","middle","left","object","body","heading","About","leaders","title","list","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","resetFeedbackForm","postMessage","firstname","lastname","telnum","email","agree","contactType","message","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","CommentForm","state","isModalOpen","toggleModal","submitComment","setState","postComment","dishId","rating","author","comment","outline","isOpen","toggle","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","value","password","remember","checked","preventDefault","Fragment","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","addComments","commentsFailed","addPromos","promotions","promosFailed","loadingPromos","addLeaders","leadersFailed","loadingLeaders","Main","fetchDishes","fetchComments","fetchLeaders","fetchPromos","location","classNames","timeout","path","component","filter","featured","promo","exact","match","parseInt","params","commentsErr","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","newMessage","actions","reset","Dishes","action","Comments","concat","Leaders","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.789b0703.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl='http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../redux/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    \r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n\r\n            <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                  <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErr}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadLoading} errMess={props.leadFail} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,CardTitle,Breadcrumb,BreadcrumbItem } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../redux/baseUrl';\r\n\r\n    function RenderMenuItem ({ dish, onClick }) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl+ dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.Id}>\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {baseUrl} from '../redux/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeaders({leader}){\r\n    return (\r\n            <div key={leader.Id} className=\"col-12 mt-5\">\r\n                <Media tag=\"li\">\r\n                    <Media middle left>\r\n                        <Media object src={baseUrl+leader.image} alt={leader.name}/>\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </div>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n    let leaders;\r\n        if (props.leaders.isLoading) {\r\n            return(\r\n                <Loading />\r\n            );\r\n        }\r\n        else if (props.leaders.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.leaders.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            leaders = props.leaders.leaders.map((leader) => {\r\n                return(\r\n                    <Stagger in>\r\n                        <Fade in>\r\n                           <RenderLeaders leader={leader}/>\r\n                        </Fade>\r\n                    </Stagger>\r\n                )\r\n            });\r\n        }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                        <Media list>\r\n                            {leaders} \r\n                        </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    // console.log('Current State is: ' + JSON.stringify(values));\r\n    // alert('Current State is: ' + JSON.stringify(values));\r\n    this.props.resetFeedbackForm();\r\n    this.props.postMessage(\r\n      values.firstname,\r\n      values.lastname,\r\n      values.telnum,\r\n      values.email,\r\n      values.agree,\r\n      values.contactType,\r\n      values.message\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope\"></i>:{' '}\r\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-primary\"\r\n                href=\"tel:+85212345678\"\r\n              >\r\n                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n              <a role=\"button\" className=\"btn btn-info\" href=\"/#\">\r\n                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-success\"\r\n                href=\"mailto:confusion@food.net\"\r\n              >\r\n                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us your Feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <Form\r\n              model=\"feedback\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <Stagger in>\r\n                <Fade in>\r\n                  <Row className=\"form-group\">\r\n                    <Label htmlFor=\"firstname\" md={2}>\r\n                      First Name\r\n                    </Label>\r\n                    <Col md={10}>\r\n                      <Control.text\r\n                        model=\".firstname\"\r\n                        id=\"firstname\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"First Name\"\r\n                        className=\"form-control\"\r\n                        validators={{\r\n                          required,\r\n                          minLength: minLength(3),\r\n                          maxLength: maxLength(15),\r\n                        }}\r\n                      />\r\n                      <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".firstname\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                          required: 'Required',\r\n                          minLength: 'Must be greater than 2 characters',\r\n                          maxLength: 'Must be 15 characters or less',\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Fade>\r\n                <Fade in>\r\n                  <Row className=\"form-group\">\r\n                    <Label htmlFor=\"lastname\" md={2}>\r\n                      Last Name\r\n                    </Label>\r\n                    <Col md={10}>\r\n                      <Control.text\r\n                        model=\".lastname\"\r\n                        id=\"lastname\"\r\n                        name=\"lastname\"\r\n                        placeholder=\"Last Name\"\r\n                        className=\"form-control\"\r\n                        validators={{\r\n                          required,\r\n                          minLength: minLength(3),\r\n                          maxLength: maxLength(15),\r\n                        }}\r\n                      />\r\n                      <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".lastname\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                          required: 'Required',\r\n                          minLength: 'Must be greater than 2 characters',\r\n                          maxLength: 'Must be 15 characters or less',\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Fade>\r\n                <Fade in>\r\n                  <Row className=\"form-group\">\r\n                    <Label htmlFor=\"telnum\" md={2}>\r\n                      Contact Tel.\r\n                    </Label>\r\n                    <Col md={10}>\r\n                      <Control.text\r\n                        model=\".telnum\"\r\n                        id=\"telnum\"\r\n                        name=\"telnum\"\r\n                        placeholder=\"Tel. Number\"\r\n                        className=\"form-control\"\r\n                        validators={{\r\n                          required,\r\n                          minLength: minLength(3),\r\n                          maxLength: maxLength(15),\r\n                          isNumber,\r\n                        }}\r\n                      />\r\n                      <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".telnum\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                          required: 'Required',\r\n                          minLength: 'Must be greater than 2 numbers',\r\n                          maxLength: 'Must be 15 numbers or less',\r\n                          isNumber: 'Must be a number',\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Fade>\r\n                <Fade in>\r\n                  <Row className=\"form-group\">\r\n                    <Label htmlFor=\"email\" md={2}>\r\n                      Email\r\n                    </Label>\r\n                    <Col md={10}>\r\n                      <Control.text\r\n                        model=\".email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        className=\"form-control\"\r\n                        validators={{\r\n                          required,\r\n                          validEmail,\r\n                        }}\r\n                      />\r\n                      <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".email\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                          required: 'Required',\r\n                          validEmail: 'Invalid Email Address',\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Fade>\r\n                <Fade in>\r\n                  <Row className=\"form-group\">\r\n                    <Col md={{ size: 6, offset: 2 }}>\r\n                      <div className=\"form-check\">\r\n                        <Label check>\r\n                          <Control.checkbox\r\n                            model=\".agree\"\r\n                            name=\"agree\"\r\n                            className=\"form-check-input\"\r\n                          />{' '}\r\n                          <strong>May we contact you?</strong>\r\n                        </Label>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={{ size: 3, offset: 1 }}>\r\n                      <Control.select\r\n                        model=\".contactType\"\r\n                        name=\"contactType\"\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option>Tel.</option>\r\n                        <option>Email</option>\r\n                      </Control.select>\r\n                    </Col>\r\n                  </Row>\r\n                </Fade>\r\n                <Fade in>\r\n                  <Row className=\"form-group\">\r\n                    <Label htmlFor=\"message\" md={2}>\r\n                      Your Feedback\r\n                    </Label>\r\n                    <Col md={10}>\r\n                      <Control.textarea\r\n                        model=\".message\"\r\n                        id=\"message\"\r\n                        name=\"message\"\r\n                        rows=\"12\"\r\n                        className=\"form-control\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Fade>\r\n                <Fade in>\r\n                  <Row className=\"form-group\">\r\n                    <Col md={{ size: 10, offset: 2 }}>\r\n                      <Button type=\"submit\" color=\"primary\">\r\n                        Send Feedback\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Fade>\r\n              </Stagger>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;","import React,{Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,CardTitle, Breadcrumb, BreadcrumbItem, Button,Col, ModalHeader,Modal,ModalBody,Label, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Errors, LocalForm, Control } from \"react-redux-form\";\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../redux/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required=(val)=>val && val.length;\r\nconst minLength=(len)=>(val)=>val && (val.length>=len)\r\nconst maxLength=(len)=>(val)=>!val || (val.length<=len)\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n           isModalOpen:false\r\n    }\r\n    this.toggleModal=this.toggleModal.bind(this)\r\n    this.submitComment=this.submitComment.bind(this)\r\n    }\r\n    toggleModal(){\r\n        this.setState({isModalOpen:!this.state.isModalOpen})\r\n    }\r\n    submitComment(values){\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                <span className=\"fa fa-pencil fa-lg\"></span>\r\n                <span> Submit Comment   </span></Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Comment Form</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.submitComment(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"col-12 form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"author\">\r\n                                        Your Name\r\n                                    </Label>\r\n                                    <Control.text model=\".author\" className=\"col-12 form-control\" name=\"author\" id=\"author\" placeholder=\"Name\"\r\n                                    validators={\r\n                                        {required,minLength:minLength(3),maxLength:maxLength(10)}\r\n                                    }/>\r\n                                    <Errors className=\"text-danger\" \r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required:\"Required\",\r\n                                        minLength:\"Must be greater than 3\",\r\n                                        maxLength:\"Must be less than 10\"\r\n                                    }\r\n                                    }/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col >\r\n                                    <Label htmlFor=\"comment\">Comments</Label>\r\n                                    <Control.textarea model=\".comment\" rows=\"6\" className=\"col-12 form-control\" name=\"comment\" id=\"comment\" placeholder=\"Comments\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:6, offset:1}}>\r\n                                  <Button className=\"btn-success\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n    function RenderDish({dish}) {\r\n        return (\r\n            <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n                <Card>\r\n                    <CardImg top width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n\r\n    function RenderComments({comments,postComment,dishId}){\r\n        if(comments!=null){\r\n            return(\r\n                <div className=\"col-12 col-md-7 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment)=>{\r\n                            return(\r\n                                <Fade>\r\n                                    <li key={comment.Id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>--{comment.author},{new Intl.DateTimeFormat('en-us',{year:'numeric',month:'short',day:'2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                    </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                    </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment}/>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n    const DishDetail=(props)=> {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dish != null){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                           <RenderDish dish={props.dish} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                           <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\nexport default DishDetail;\r\n","import React,{Component} from 'react'\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,Modal,ModalBody,ModalHeader,Form,FormGroup,Input,Label,Button } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen:false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal=this.toggleModal.bind(this);\r\n        this.handleLogin=this.handleLogin.bind(this);\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n      toggleModal(){\r\n          this.setState({\r\n              isModalOpen:!this.state.isModalOpen\r\n          })\r\n      }\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Firstname: \" + this.firstname.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                            <ModalHeader toggle={this.toggleModal}>\r\n                                Login\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                                <Form onSubmit={this.handleLogin}>\r\n                                    <FormGroup>\r\n                                        <Label htmlFor=\"firstname\">First Name</Label>\r\n                                        <Input type=\"text\" id=\"firstname\" name='firstname' placeholder='First Name'\r\n                                             innerRef={(input)=> this.firstname = input} />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                       <Label htmlFor=\"password\">Password</Label>\r\n                                        <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                            innerRef={(input) => this.password = input}  />\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                          <Input type=\"checkbox\" name=\"remember\"\r\n                                          innerRef={(input) => this.remember = input}  />\r\n                                          Remember me\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                                </Form>\r\n                            </ModalBody>\r\n                        </Modal>\r\n                    </div>\r\n                </Jumbotron>\r\n            </React.Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n           <div className=\"container\">\r\n               <div className=\"row justify-content-center\">             \r\n                  <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                           <li><Link to='/home'>Home</Link></li>\r\n                           <li><Link to='/aboutus'>About Us</Link></li>\r\n                           <li><Link to='/menu'>Menu</Link></li>\r\n                           <li><Link to='/contactus'>Contact Us</Link></li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                      <h5>Our Address</h5>\r\n                       <address>\r\n\t\t                  121, Clear Water Bay Road<br />\r\n\t\t                  Clear Water Bay, Kowloon<br />\r\n\t\t                  HONG KONG<br />\r\n\t\t                  <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t                  <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t                  <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                           confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                          <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                          <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                          <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                          <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                           <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                          <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                   <div className=\"col-auto\">\r\n                      <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from './baseUrl';\r\nexport const addComment=(comment)=>({\r\n    type:ActionTypes.ADD_COMMENT,\r\n    payload:comment\r\n})\r\nexport const addFeedback=(feedback)=>({\r\n    type:ActionTypes.ADD_FEEDBACK,\r\n    payload:feedback\r\n})\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch)=> {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date=new Date().toISOString();\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\nexport const postMessage = (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch)=> {\r\n    const newMessage = {\r\n        firstname:firstname,\r\n        lastname:lastname,\r\n        telnum:telnum,\r\n        email:email,\r\n        agree:agree,\r\n        contactType:contactType,\r\n        message:message\r\n    };\r\n    newMessage.date=new Date().toISOString();\r\n    return fetch(baseUrl +'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newMessage),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl+'dishes')\r\n    .then(response=>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error=new Error('Error'+response.status+':'+response.statusText);\r\n            error.response=response;\r\n            throw error;\r\n        }\r\n    },\r\n    error=>{\r\n        var errmess=new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response=>response.json())\r\n    .then(dishes=>dispatch(addDishes(dishes)))\r\n    .catch(error=>dispatch(dishesFailed(error.message)))\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\nexport const fetchComments=()=>(dispatch)=>{\r\n    return fetch(baseUrl+'comments')\r\n    .then(response=>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error=new Error('Error'+response.status+':'+response.statusText);\r\n            error.response=response;\r\n            throw error;\r\n        }\r\n    },\r\n        error=>{\r\n            var errmess=new Error(error.message);\r\n            throw errmess;\r\n        })\r\n    .then(response => response.json())\r\n    .then(comments=>dispatch(addComments(comments)))\r\n    .catch(error=>dispatch(commentsFailed(error.message)))\r\n}\r\nexport const addComments=(comments)=>({\r\n    type:ActionTypes.ADD_COMMENTS,\r\n    payload:comments\r\n})\r\nexport const commentsFailed=(errMess)=>({\r\n    type:ActionTypes.COMMENTS_FAILED,\r\n    payload:errMess\r\n})\r\nexport const fetchPromos=()=>(dispatch)=>{\r\n    dispatch(loadingPromos());\r\n    return fetch(baseUrl+'promotions')\r\n    .then(response=>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error=new Error('Error'+response.status+':'+response.statusText);\r\n            error.response=response;\r\n            throw error;\r\n        }\r\n    },\r\n        error=>{\r\n            var errmess=new Error(error.message);\r\n            throw errmess;\r\n        })\r\n    .then(response => response.json())\r\n    .then(promotions=>dispatch(addPromos(promotions)))\r\n    .catch(error=>dispatch(promosFailed(error.message)))\r\n}\r\nexport const addPromos=(promotions)=>({\r\n    type:ActionTypes.ADD_PROMOS,\r\n    payload:promotions\r\n})\r\nexport const promosFailed=(errMess)=>({\r\n    type:ActionTypes.FAILED_PROMOS,\r\n    payload:errMess\r\n})\r\nexport const loadingPromos=()=>({\r\n    type:ActionTypes.LOADING_PROMOS,\r\n})\r\nexport const fetchLeaders=()=>(dispatch)=>{\r\n    dispatch(loadingLeaders());\r\n    return fetch(baseUrl+'leaders')\r\n    .then(response=>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error=new Error('Error'+response.status+':'+response.statusText);\r\n            error.response=response;\r\n            throw error;\r\n        }\r\n    },\r\n        error=>{\r\n            var errmess=new Error(error.message);\r\n            throw errmess;\r\n        })\r\n    .then(response => response.json())\r\n    .then(leaders=>dispatch(addLeaders(leaders)))\r\n    .catch(error=>dispatch(leadersFailed(error.message)))\r\n}\r\nexport const addLeaders=(leaders)=>({\r\n    type:ActionTypes.ADD_LEADERS,\r\n    payload:leaders\r\n})\r\nexport const leadersFailed=(errMess)=>({\r\n    type:ActionTypes.FAILED_LEADERS,\r\n    payload:errMess\r\n})\r\nexport const loadingLeaders=()=>({\r\n    type:ActionTypes.LOADING_LEADERS,\r\n})","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_FEEDBACK='ADD_FEEDBACK';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED='COMMENTS_FAILED';\r\nexport const ADD_PROMOS='ADD_PROMOS';\r\nexport const LOADING_PROMOS='LOADING_PROMOS';\r\nexport const FAILED_PROMOS='FAILED_PROMOS';\r\nexport const ADD_LEADERS='ADD_LEADERS';\r\nexport const LOADING_LEADERS='LOADING_LEADERS';\r\nexport const FAILED_LEADERS='FAILED_LEADERS';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponents';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes,fetchComments,fetchLeaders,fetchPromos,postMessage } from '../redux/ActionCreators';\r\nimport {actions} from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postMessage:(firstname,lastname,telnum,email,agree,contactType,message)=>dispatch(postMessage(firstname,lastname,telnum,email,agree,contactType,message)),\r\n  fetchDishes: () => { dispatch(fetchDishes())}, resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: ()=>{dispatch(fetchComments())},fetchLeaders: ()=>{dispatch(fetchLeaders())},\r\n  fetchPromos: ()=>{dispatch(fetchPromos())}\r\n\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  \r\ncomponentDidMount() {\r\n  this.props.fetchDishes();\r\n  this.props.fetchComments();\r\n  this.props.fetchLeaders();\r\n  this.props.fetchPromos();\r\n}\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n          <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishesErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promosLoading={this.props.promotions.isLoading}\r\n              promosErr={this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leadLoading={this.props.leaders.isLoading} leadFail={this.props.leaders.errMess}\r\n          />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            postComment={this.props.postComment} commentsErr={this.props.comments.errMess}\r\n          />\r\n      );\r\n    };\r\n    \r\n \r\n    return (\r\n      <div>\r\n        <Header />\r\n          <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={500}>\r\n              <Switch>\r\n                <Route path='/home' component={HomePage}/>\r\n                <Route exact path='/menu' component={()=><Menu dishes={this.props.dishes}/>} />\r\n                <Route path='/menu/:dishId' component={DishWithId} />\r\n                <Route exact path=\"/contactus\" component={()=><Contact resetFeedbackForm={this.props.resetFeedbackForm} postMessage={this.props.postMessage}/>}/>\r\n                <Route exact path=\"/aboutus\" component={()=><About leaders={this.props.leaders}/>}/>\r\n                <Redirect to=\"/home\"/>\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\n// export const Dishes = (state = DISHES, action) => {\r\n//     switch (action.type) {\r\n//         default:\r\n//           return state;\r\n//       }\r\n// };\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess:null,\r\n    comments:[]\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            console.log(\"Comment: \", comment);\r\n            return {...state,comments:state.comments.concat(comment),errMess:null};\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return{...state,comments:[],errMess:action.payload}\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = \r\n    {isLoading:true,\r\n    errMess:null,\r\n    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOADING_LEADERS:\r\n            return{...state,isLoading:true,errMess:null,leaders:[]}\r\n        case ActionTypes.ADD_LEADERS:\r\n            return{...state,isLoading:false,errMess:null,leaders:action.payload}\r\n        case ActionTypes.FAILED_LEADERS:\r\n            return{...state,isLoading:false,errMess:action.payload,leaders:[]}\r\n        default:\r\n          return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading:true,\r\n    errMess:null,\r\n    promotions:[]\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOADING_PROMOS:\r\n            return{...state,isLoading:true,errMess:null,promotions:[]}\r\n        case ActionTypes.ADD_PROMOS:\r\n            return{...state,isLoading:false,errMess:null,promotions:action.payload}\r\n        case ActionTypes.FAILED_PROMOS:\r\n            return{...state,isLoading:false,errMess:action.payload,promotions:[]}\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback={\r\n    firstname:'',\r\n    lastname:'',\r\n    telnum:'',\r\n    email:'',\r\n    agree:false,\r\n    contactType:'Tel.',\r\n    message:'',\r\n    Id:''\r\n}","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport { Promotions } from './promotions';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {createForms} from 'react-redux-form'\r\nimport {InitialFeedback} from './form'\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes:Dishes,\r\n            comments:Comments,\r\n            leaders:Leaders,\r\n            promotions:Promotions,\r\n            ...createForms({\r\n                feedback:InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}